### REQUIRED: Configure services to deploy ###
tags:
  scm: false # set to true to deploy services required for SCM integration
  scmPrCheck: false # set to true to deploy services required for SCM PR check functionality
  cli: false # set to true to deploy services required for CLI integration
  ide: false # set to true to deploy services required for supported IDE plugins

global:
  ### OPTIONAL: Image pull secrets ###
  imagePullSecret:
    enabled: true # Set to false if an image pull secret is not required
    name: &imagePullSecretName "snyk-code-local-engine-pull-secret"
    credentials:
      # Contact your Snyk representative to get credentials
      username: ""
      password: ""

  # Set to '[]' if your image registry does not require authentication.
  # Set to `[ <existing-secret-name> ]` if re-using credentials that already exist on your Kubernetes cluster
  # NOTE: this secret must be within the same namespace as the Snyk Code Local Engine deployment
  imagePullSecrets: [ *imagePullSecretName ] 

  ### OPTIONAL: Image registry ###
  imageRegistry: "" # Set to private image registry address if using non-default image registries ( protocol is not needed here, means "http://" or "https://" is not needed.)

  ### OPTIONAL: Local engine URL ###
  # A URL that points to the cluster ingress. Required for CLI/PR Checks.
  # Ex: http://local-engine.domain
  localEngineUrl: ""

  ### OPTIONAL: Configure if using an outbound proxy. ###
  proxy:
    enabled: false # Set to true to enable proxy support.
    url: "" # Proxy URL, including schema: http[s]://username:password@proxy:port
    tlsRejectUnauthorized: false # Set to true if ignoring any certificate presented by the proxy.
    useCustomCert: false # Set to true to load the certificate specified below.
    cert: | # Multiline string containing any/all certificates required for proxy trust, in PEM format.
      ""

  ## Snyk Code Local Engine ships with an NGINX Ingress controller.
  ingressController:
    ### OPTIONAL: Deploy the NGINX Ingress controller. Requires a ClusterRole.
    enabled: false

  ## The built-in Ingress to Snyk Code Local Engine uses NGINX.
  ingress:
    ### OPTIONAL: Setup ingress to enable CLI/PR Checks
    enabled: false
    # Leaving this empty will allow any host pointing to ingress to work
    host: ""
    ### OPTIONAL: TLS.
    tls:
      # Set to true to enable TLS for the ingress
      enabled: false
      # If TLS is enabled, define your secret here
      # If a secret is already created for the host, set the name here
      # If a secret should be created for you, set key and cert as well
      secret:
        # Set the name of the secret that should be used
        # Leave blank to have one generated based on the service name
        name: "{{ .Release.Name }}-ingress-tls"
        key: |
          # Should start with -----BEGIN PRIVATE KEY-----

        cert: |
          # Should start with -----BEGIN CERTIFICATE-----

  localEngine:
  ### OPTIONAL: Configure self-managed secrets ###

    # set to existing redis secret resource name
    # ensure secret contains the key REDIS_PASSWORD
    # ensure key value is base64 encoded
    redisSecretName: ""

    # set to existing session secret resource name
    # ensure secret contains the key SESSION_SECRET
    # ensure key value is base64 encoded
    sessionSecretName: ""

    # only required if using SCM integration
    # set to existing mongodb secret resource name
    # ensure secret contains the keys mongodb-password, mongodb-root-password, mongodb-replica-set-key
    # ensure key values are base64 encoded
    mongodbSecretName: ""

### OPTIONAL: Configure Broker settings for SCM integration ###
broker-client:
  # Broker Token is a value from Snyk. Get this from the integration settings page or your Snyk Representative
  brokerToken: ""

  ##### SCM Generic. Only fill in values that are required for your specific SCM #####
  #   brokerType is used to define the Source Control that you are connecting to.
  #   Allowed values for brokerType:
  #   Github.com: github-com
  #   Github Enterprise: github-enterprise
  #   Bitbucket: bitbucket-server
  #   Gitlab: gitlab
  #   Azure Repos: azure-repos
  brokerType: ""

  ## Github Enterprise ##

  # GHE URL - Ex: your.ghe.domain.com (do not prepend HTTPS) - For GHE Cloud use api.github.com
  githubHost: ""

  # GHE API Address - do not prepend HTTPS
  githubApi: ""

  # GHE Graph QL Address - do not prepend HTTPS
  githubGraphQl: ""

  ##### Github and Github Enterprise #####
  githubToken: ""

  ##### Bitbucket Server #####

  # Bitbucket Username
  bitbucketUsername: ""

  # Bitbucket Password
  bitbucketPassword: ""

  # bitbucketHost URL - do not prepend HTTPS
  bitbucketHost: ""

  ##### GitLab #####

  # Gitlab URL - do not prepend HTTPS
  gitlabHost: ""

  gitlabToken: ""

  ##### Azure Repos #####
  # Azure Repos Organization
  azureReposOrg: ""

  # Azure Repos Hostname - do not prepend HTTPS
  azureReposHost: ""

  # Azure Repos Token
  azureReposToken: ""

  ### Warning: enabling `codeSnippet` will send analysis results to Snyk servers
  codeSnippet:
    enabled: false

  # PRIVATE CLOUD / REQUIRED: do not touch unless directed by a Snyk Representative
  brokerServerUrl: ""
